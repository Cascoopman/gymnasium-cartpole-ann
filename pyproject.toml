[project]
name = "gymnasium-cartpole"
version = "0.0.1"
requires-python = ">=3.11"
dependencies = [
    "torch",
    "gymnasium",
]

[dependency-groups]
dev = ["ruff", "bandit", "pre-commit", "watchdog"]

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "Q",   # flake8-quotes
    "T20", # flake8-print
    "PT",  # flake8-pytest-style
    "RET", # flake8-return
    "PIE", # flake8-pie
    "A",   # flake8-builtins
    "COM", # flake8-commas
    "C90", # mccabe
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "ANN", # flake8-annotations
    "ASYNC", # flake8-async
    "EM",  # flake8-errmsg
    "EXE", # flake8-executable
    "FA",  # flake8-future-annotations
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "G",   # flake8-logging-format
    "INP", # flake8-no-pep420
    "PIE", # flake8-pie
    "T20", # flake8-print
    "PYI", # flake8-pyi
    "PT",  # flake8-pytest-style
    "Q",   # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PD",  # pandas-vet
    "PGH", # pygrep-hooks
    "PL",  # pylint
    "TRY", # tryceratops
    "FLY", # flynt
    "NPY", # numpy
    "AIR", # airflow
    "PERF", # perflint
    "FURB", # refurb
    "RUF", # ruff-specific rules
]
ignore = [
    "D211", # ignore no-blank-line-before-class (pydocstyle) - conflicts with D203
    "D212", # ignore multi-line-summary-first-line (pydocstyle) - conflicts with D213
]



[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.bandit]
exclude_dirs = ["tests", "test_*", "*_test.py"]
severity = "medium"
confidence = "medium"


# Pre-commit hooks configuration
[tool.pre-commit]
repos = [
    { repo = "https://github.com/astral-sh/ruff-pre-commit", rev = "v0.1.6", hooks = [{ id = "ruff", args = ["--fix"] }, { id = "ruff-format" }] },
    { repo = "https://github.com/PyCQA/bandit", rev = "1.7.5", hooks = [{ id = "bandit", args = ["-r", ".", "-f", "json", "-o", "bandit-report.json"] }] },
]
